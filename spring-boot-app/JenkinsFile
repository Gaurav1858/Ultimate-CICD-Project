pipeline {
agent {
    docker {
      image 'abhishekf5/maven-abhishek-docker-agent:v1'
      args '--user root -v /var/run/docker.sock:/var/run/docker.sock' // mount Docker socket to access the host's Docker daemon
    }
  }
  stages {
    //stage('Checkout') {
      //steps {
        //sh 'echo passed'
        //git branch: 'main', url: 'https://github.com/Gaurav1858/Ultimate-CICD-Project.git'
      //}
    //}
    stage('Build and Test') {
      steps {
        sh 'ls -ltr'
        // build the project and create a JAR file and copy the artifact to the docker image, which we have to build.
        sh 'cd spring-boot-app && mvn clean install'
      }
    }
    stage('Build docker image'){
            steps{
                script{
                    sh 'cd spring-boot-app && docker build -t knoldus1858/ultimate-cicd:v2 .'
                }
            }
        }
   stage('Push image to Hub'){
    steps{
        script{
            withCredentials([usernamePassword(credentialsId: 'docker-cred', usernameVariable: 'DOCKER_USER', passwordVariable: 'DOCKER_PASS')]) {
                sh 'cd spring-boot-app && echo ${DOCKER_PASS} | docker login -u ${DOCKER_USER} --password-stdin'
            }
            sh 'cd spring-boot-app && docker push docker.io/knoldus1858/ultimate-cicd:v2'
        }
    }
}
   stage('Deploy to k8s'){
            steps{
                script{
                    kubernetesDeploy (configs: 'spring-boot-app/deployment.yaml',kubeconfigId: 'kubernetes')
                    //sh 'kubectl apply -f deployment.yaml'
                }
            }
        }
  }
}
